/* autogenerated by Processing revision 1276 on 2021-10-22 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class sketch_2linhas_aleatorias extends PApplet {

Mikiu l1, l2;

 public void setup() {
  noStroke();
  /* size commented out by preprocessor */;
  l1 = new Mikiu(random(width), random(height), random(width), random(height));
  l2 = new Mikiu(random(width), random(height), random(width), random(height));
}


 public void draw () {
  
  background(0);

  l1.mover();
  l1.check();
  l1.dLine();
  l2.mover();
  l2.check();
  l2.dLine();
  
}
class Mikiu {

  //propriedades
  float posX, posY, posX2, posY2, speed, weight, random,d;
  float minD = 150;
  int c = color(180, 50, 40);

  //construtor
  Mikiu(float x, float y, float x2, float y2) {

    posX = x;
    posY = y;
    posX2 = x2;
    posY2 = y2;
    weight = 9;
    speed = random(20);
    random = random(4);
  }

   public void dLine() {
    stroke(c);
    strokeWeight(weight);
    line(posX, posY, posX2, posY2);
  }

   public void mover() {
    
    int d0 = PApplet.parseInt(random(4));

    if (d0 == 0 && posX < width) posX += speed;
    else if (d == 1 && posX > 0) posX -= speed;
    else if (d == 2 && posY < height) posY += speed;
    else if (d == 3 && posY > 0) posY -= speed;

    d = PApplet.parseInt(random(4));
    if (d0 == 0 && posX2 < width) posX2 += speed;
    else if (d0 == 1 && posX2 > 0) posX2 -= speed;
    else if (d0 == 2 && posY2 < height) posY2 += speed;
    else if (d0 == 3 && posY2 > 0) posY2 -= speed;
  }

   public void check() {
    
    d = dist(l1.posX, l1.posY, l2.posX, l2.posY);
    if(d < minD) {
      l1.posX = l2.posX;
      l1.posY = l2.posY;
    }
    d = dist(l1.posX2, l1.posY2, l2.posX2, l2.posY2);
    if(d < minD){
      l1.posX2 = l2.posX2;
      l1.posX2 = l2.posX2;
    }
    d = dist(l1.posX2, l1.posY2, l2.posX, l2.posY);
    if(d < minD){
      l1.posX2 = l2.posX;
      l1.posY2 = l2.posY;
    }
    d = dist(l1.posX, l1.posY, l2.posX2, l2.posY2);
    if(d < minD){
      l1.posX = l2.posX2;
      l1.posY = l2.posY2;
    }
  }
}


  public void settings() { size(800, 800); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "sketch_2linhas_aleatorias" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
