/* autogenerated by Processing revision 1276 on 2021-11-24 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class testing_ex18 extends PApplet {

Quadrado[] quad;
float linhas = 8;
float colunas = 8;
float x = 0;
float y = 0;
int n = PApplet.parseInt(linhas * colunas); // n = número de vezes que quero que o retângulo seja desenhado
float sizeq; // size
 public void setup() {
  frameRate(10);
  /* size commented out by preprocessor */;
  sizeq = width / colunas;
  quad = new Quadrado[n];

  boolean f = true;
  for (int i = 0; i < n; i++) {

    quad[i] = new Quadrado(x, y, sizeq, f);
    if(f) f = false;
    else f = true;
    

    println(i + " " + y + " " + x);
    if (x < width - sizeq) {
      x += sizeq;
    } else {
      y += sizeq;
      x = 0;
      if (linhas % 2 == 0 && colunas%2 == 0)
        if (f)f = false;
        else f = true;
    }
  }
}


 public void draw() {
  background(200, 0, 0);
  for (int i = 0; i < quad.length; i++) {
    quad[i].desenha();
  }
}

class Quadrado {
  float posX, posY, tamanho;
  int black = color(0, 0, 0);
  int white = color(255, 255, 255);
  boolean flag;

  Quadrado (float x, float y, float t, boolean f) {
    posX = x;
    posY = y;
    tamanho = t;
    flag = f;
  }

   public void desenha () {
    //noStroke ();
    if (flag) {
      fill (white);
    } else {
      fill(black);
    }
    rect (posX, posY, tamanho, tamanho);
  }
}


  public void settings() { size(500, 500); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "testing_ex18" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
